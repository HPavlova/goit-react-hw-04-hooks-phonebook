{"version":3,"sources":["components/Phonebook/Filter.module.css","components/Phonebook/ContactForm.module.css","components/Phonebook/ContactForm.jsx","components/Phonebook/ContactList.jsx","components/Phonebook/Filter.jsx","App.js","index.js","components/Phonebook/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onAddContact","className","styles","onSubmit","this","ContactForm__label","ContactForm__input","type","pattern","title","required","onChange","ContactForm__button","Component","ContactList","contacts","onDeleteContact","map","contact","ContactList__item","ContactList__button","onClick","id","Filter","onChangeFilter","Filter__label","Filter__input","target","App","filter","addContact","uuidv4","searchSameName","find","toLowerCase","alert","prevState","deleteContact","contactID","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5c11ae8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__label\":\"Filter_Filter__label__2WTPA\",\"Filter__input\":\"Filter_Filter__input__2VibD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__gy4l_\",\"ContactForm__label\":\"ContactForm_ContactForm__label__1LiF2\",\"ContactForm__input\":\"ContactForm_ContactForm__input__1MjcU\",\"ContactForm__button\":\"ContactForm_ContactForm__button__j2ylG\"};","import React, { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport propTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.ContactForm} onSubmit={this.handleSubmit}>\n        <label className={styles.ContactForm__label}>\n          Name\n          <input\n            className={styles.ContactForm__input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.ContactForm__label}>\n          Number\n          <input\n            className={styles.ContactForm__input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.ContactForm__button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  handleChange: propTypes.func,\n  handleSubmit: propTypes.func,\n  name: propTypes.string,\n  number: propTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map(contact => (\n      <li className={styles.ContactList__item} key={contact.id}>\n        {contact.name + ': ' + contact.number}\n        <button\n          type=\"button\"\n          className={styles.ContactList__button}\n          name=\"delete\"\n          onClick={() => onDeleteContact(contact.id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onDeleteContact: propTypes.func,\n  contacts: propTypes.arrayOf(propTypes.object),\n  contact: propTypes.shape({\n    id: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div>\n      <label className={styles.Filter__label}>\n        Find contacts by name\n        <input\n          className={styles.Filter__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={value}\n          onChange={event => {\n            onChangeFilter(event.target.value);\n          }}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: propTypes.string.isRequired,\n  onChangeFilter: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nimport ContactForm from './components/Phonebook/ContactForm';\nimport ContactList from './components/Phonebook/ContactList';\nimport Filter from './components/Phonebook/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const searchSameName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (searchSameName) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  deleteContact = contactID => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactID),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__38ZiU\",\"ContactList__button\":\"ContactList_ContactList__button__3pf6J\"};"],"sourceRoot":""}